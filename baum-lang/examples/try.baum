syntax 0> A → B = Π(x: A) B
syntax 0> (x: A) → B = Π(x: A) B

id {a: U} (x: a): a = x
id {a} (x: a): a = x
const {a b: U}: a → b → a = λ(x: a, y: b) x
id2 {a} (x: a): a = id {a} x

-- const {a b: U} (x: a, y: b) = x
-- const {a b: U}: (a, b) → a = λ(x: a, y: b) x
-- const {a b: U}: Σ(a, b) → a = λ(x: a, y: b) x
-- curry
--   {a b c: U}
--   (f: (p: Σ(x: a, b(x))) → c(p))
--   : (x: a) → (y: b(x)) → c(x, y) = λ(x: a) λ(y: b(x)) f (x, y)
-- curry
--   {a b: U} {c: Σ(a, b) → U}
--   (f: (p: Σ(x: a, b(x))) → c(p))
--   : (x: a) → (y: b(x)) → c(x, y) = λ(x: a) λ(y: b(x)) f(x, y)
-- curry
--   {a: U} {b: a → U} {c: Σ(a, b) → U}
--   (f: (p: Σ(x: a, b(x))) → c(p))
--   : (x: a) → (y: b(x)) → c(x, y) = λ(x: a) λ(y: b(x)) f(x, y)
-- flip {a b c: U} (f: (x: a) → (y: b) → c(x, y)): (y: b) → (x: a) → c(x, y) = λ(y: b) λ(x: a) f y x

u = id id id id

curry
  {a: U} {b: a → U} {c: Σ(x: a, b(x)) → U}
  (f: (p: Σ(x: a, b(x))) → c(p))
  : (x: a) → (y: b(x)) → c(x, y)
  = λ(x: a) λ(y: b(x)) f(x, y)
flip {a b: U} {c: Σ(a, b) → U} (f: (x: a) → (y: b) → c(x, y)): (y: b) → (x: a) → c(x, y) = λ(y: b) λ(x: a) f x y
fst {a: U} {b: a → U} (p: Σ(x: a, b(x))): a = p.0
snd {a: U} {b: a → U} (p: Σ(x: a, b(x))): b(p.0) = p.1
two {a: U} (f: a → a) (x: a): a = f (f x)
u = two id

-- x = λ(a: U, v: a) {x = a, y = v, z = U}
-- y (a: U) (v: a) = {x = a, y = v, z = U}
-- z = x
-- y (a: U) (v: a): Σ{x: U, y: a, z: U} = {x = a, y = v, z = U}
-- 
-- app (A B: U) (f: Π(A) B) (x: A) = f x
-- app2 (A B: U) (f: Π(a: A) B) (x: A): B = f x
-- g x = x
-- 
-- module A = {
--   x = g
--   y = Π(x: U) x
--   u: y = _
-- }

module Hurkens = {
  ⊥: U = (A: U) → A
  neg (A: U) = A → ⊥
  syntax ¬ A = neg A
  P (A: U) = A → U
  u: U = (X: U) → (P (P X) → X) → P (P X)
  τ (t: P (P u)): u = λ(X, f, p) t λ(x) p (f (x X f))
  σ (s: u): P (P u) = s u λ(t) τ t
  Δ: P u = λ(y) ¬ ((p: P u) → σ y p → p (τ (σ y)))
  Ω: u = τ λ(p) (x: u) → σ x p → p x
  D: U = (p: P u) → σ Ω p → p (τ (σ Ω))

  lem₁ (p: P u) (H1: (x: u) → σ x p → p x): p Ω = H1 Ω λ(x) H1 (τ (σ x))
  lem₂: ¬ D = lem₁ Δ λ(x, H2, H3) H3 Δ H2 λ(p) H3 λ(y) p (τ (σ y))
  lem₃: D = λ(p) lem₁ λ(y) p (τ (σ y))
  loop: ⊥ = lem₂ lem₃
}